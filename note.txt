1) use npm init
2) nmm i express
3) nella cartella scr metti i sorgenti
4) cartella public per file html
5) aggiunto handlebars per creare pagine dinamiche che utilizzano lo stesso HTML code (Template engine) handlebars su npm è il più usato a basso livello, hbs più semplice e lo inserito
6) creata cartella view per i template dinamici
7) Aggiunta cartella view per i template dinamici e index.hbs8) index.html sarebbe da eleiminare ma lo tengo
8) I partials puoi usarli per rendere una cosa sola su tutte le altre pagine senza scriverle in ognuna tutte le volte
9) RICORDATI la funzione RENDER e non send per hbs file


CSS:
1) per color puoi definire anche l'hex code del colore ( es. #333333 è grey)
2) Centrare il body:
    - margin: 0 auto --> 0 non vai ad aggiungere spazio dai margini top e bottom come offset mentre auto distribuisce lo spazio per i margini sinistra e destra
    - padding: 0 16px --> 0 sotto e sopra e 16px se riduci la finestra dal margine sinistro terrà 16px staccato
3) padding aggiunge spazio dentro il box
4) margin aggiunge spazio fuori il box
5) header a {/*regole di style*/} --> per ogni tag a dentro header
6) .portrait {} applica alla classe portrait
7) mettere il footer piantato in fondo:
    - usi le flex box
8) <link rel="icon" href="/img/weather icon.png"> <!-- icona del sito web nei tab del browser--> nel head di ogni pagina

COMANDI UTILI:
1) nodemon app.js -e js,hbs dici a nodemon di rilanciare il server al cambiamento dei file js e hbs